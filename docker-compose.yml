version: "3.5"
services:

  mysql:
    container_name: gamersx-mysql
    image: mariadb:10.5.8
    env_file:
      - .env.local
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    networks:
      - gamersx
    volumes:
      - mysqldata:/var/lib/mysql

  redis:
    container_name: gamersx-redis
    image: redis:5.0
    ports:
      - 6379:6379
    networks:
      - gamersx

  vue:
    container_name: gamersx-js
    # image: node:lts-alpine
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: frontend
    # user: '1000'
    working_dir: /var/www
    command: ['yarn', 'watch']
    volumes:
      - ./:/var/www
      - ./node_modules:/var/www/node_modules
    networks:
      - gamersx
    restart: unless-stopped

  php:
    container_name: gamersx-php
    depends_on:
      - mysql
      - redis
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: app
    env_file:
      - .env.local
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - AWS_S3_ACCESS_ID=${AWS_S3_ACCESS_ID}
      - AWS_S3_ACCESS_SECRET=${AWS_S3_ACCESS_SECRET}
    ports:
      - 9000:9000
    volumes:
      - ./:/var/www/html/
      - ./var/cache/:/var/www/html/var/cache/
      - ./var/logs/:/var/www/html/var/logs/
    networks:
      - gamersx

  nginx:
    container_name: gamersx-web
    depends_on:
      - php
    build:
      args:
        UPSTREAM: local
      context: .
      dockerfile: ./docker/Dockerfile
      target: web
    ports:
      - 80:80
    volumes:
      - ./public/images/:/var/www/html/public/images/
      - ./public/build/:/var/www/html/public/build/
      # - ./docker/nginx:/etc/nginx/conf.d/
    networks:
      - gamersx
    # restart: unless-stopped

  worker:
    container_name: gamersx-worker
    depends_on:
      - mysql
      - redis
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: worker
    env_file:
      - .env.local
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
    volumes:
      - ./vendor/:/app/vendor/
      - ./composer.json:/app/composer.json
      - ./composer.lock:/app/composer.lock
      - ./var/cache/:/app/var/cache/
      - ./var/logs/:/app/var/logs/
    networks:
      - gamersx

volumes:
  mysqldata: {}

networks:
  gamersx:
    driver: bridge

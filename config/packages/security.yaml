security:
    # enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # -> custom firewall for the admin area of the URL
        admin:
            pattern: ^/admin
            context: user
            lazy: true
            # anonymous: lazy
            form_login:
                provider: fos_userbundle
                login_path: /admin/login
                check_path: /admin/login_check
                use_forward: false
                # failure_path: null
                always_use_default_target_path: true
                default_target_path: /admin/dashboard  # Example target path after login
            access_denied_url: /access-denied
            logout:
                path: /admin/logout
                target: /admin/login
            # entry_point: Symfony\Component\Security\Http\EntryPoint\LoginEntryPoint


        # -> end custom configuration

        # This firewall is used to handle the public login area
        # This part is handled by the FOS User Bundle
        main:
            pattern:             .*
            context:             user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
                default_target_path: /dashboard
            access_denied_url:  /access-denied
            logout:             true
            lazy: true
            # anonymous: lazy

        # activate different ways to authenticate
        # https://symfony.com/doc/current/security.html#firewalls-authentication

        # https://symfony.com/doc/current/security/impersonating_user.html
        # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:

        # Admin login page needs to be accessed without credential
        # changed role from: IS_AUTHENTICATED_ANONYMOUSLY to PUBLIC_ACCESS (because in updated security package version, it changed to PUBLIC_ACCESS)
        - { path: ^/admin/login$, role: PUBLIC_ACCESS }
        - { path: ^/admin/logout$, role: PUBLIC_ACCESS }
        - { path: ^/admin/login_check$, role: PUBLIC_ACCESS }
        - { path: ^/admin/resetting, role: PUBLIC_ACCESS }

        # Home page needs to be accessed without credential
        - { path: ^/$, role: PUBLIC_ACCESS }

        # Secured part of the site
        # - { path: ^/.*, role: [ROLE_USER] }

        # This config requires being logged for the whole site and having the admin role for the admin part.
        - { path: ^/admin/, role: ROLE_ADMIN_DASHBOARD_ACCESS }

    # acl:
    #     connection: default

    role_hierarchy:
        ROLE_LOCKED:     ROLE_USER
        ROLE_ADMIN:       [ROLE_LOCKED, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH, ROLE_ADMIN_DASHBOARD_ACCESS]
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # if you are using acl then this line must be commented
        ROLE_HOME_PAGE_LOGIN: [ROLE_LOGIN_ALLOWED]

    password_hashers:
        App\Entity\User:
            algorithm: bcrypt
            cost: 12  # Optional, adjust according to your needs

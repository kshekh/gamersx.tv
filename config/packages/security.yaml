security:
    enable_authenticator_manager: true
<<<<<<< ours
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
=======
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
>>>>>>> theirs
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # -> custom firewall for the admin area of the URL
        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            access_denied_url:  /access-denied
            logout:
                path:           /admin/logout
                target:         /admin/login
            security:           false

        # -> end custom configuration

        # This firewall is used to handle the public login area
        # This part is handled by the FOS User Bundle
        main:
            pattern:             .*
            context:             user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            access_denied_url:  /access-denied
            logout:             true

        # activate different ways to authenticate
        # https://symfony.com/doc/current/security.html#firewalls-authentication

        # https://symfony.com/doc/current/security/impersonating_user.html
        # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
<<<<<<< ours

        # Admin login page needs to be accessed without credential
        - { path: ^/admin/login, role: PUBLIC_ACCESS }
        - { path: ^/admin/logout, role: PUBLIC_ACCESS }
        - { path: ^/admin/login_check, role: PUBLIC_ACCESS }
        - { path: ^/admin/resetting, role: PUBLIC_ACCESS }

        # Home page needs to be accessed without credential
        - { path: ^/$, role: PUBLIC_ACCESS }

        # Secured part of the site
        # - { path: ^/.*, role: [ROLE_USER] }

        # This config requires being logged for the whole site and having the admin role for the admin part.
        - { path: ^/admin/, role: ROLE_ADMIN_DASHBOARD_ACCESS }

    # acl:
    #     connection: default

    role_hierarchy:
        ROLE_LOCKED:     ROLE_USER

        ROLE_ADMIN:       [ROLE_LOCKED, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH, ROLE_ADMIN_DASHBOARD_ACCESS]
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # if you are using acl then this line must be commented
        ROLE_HOME_PAGE_LOGIN: [ROLE_LOGIN_ALLOWED]

    password_hashers:
        # Use native password hasher, which auto-selects and migrates the best
        # possible hashing algorithm (starting from Symfony 5.3 this is "bcrypt")
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
=======
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
>>>>>>> theirs
